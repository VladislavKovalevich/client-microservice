/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.vlad.elibrary.clientmicroservice.controller.generated;

import com.vlad.elibrary.clientmicroservice.model.dto.generated.ClientInfoDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-05T16:56:34.855948800+02:00[Europe/Warsaw]")
@Validated
@Api(value = "client", description = "the client API")
public interface ClientApi {

    /**
     * GET /client/infoById : Get user info by ID
     * Get user info by ID
     *
     * @return OK (status code 200)
     *         or Bad request (status code 400)
     *         or Not found (status code 404)
     *         or Internal server error (status code 500)
     */
    @ApiOperation(value = "Get user info by ID", nickname = "infoById", notes = "Get user info by ID", response = ClientInfoDto.class, tags={ "General info", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ClientInfoDto.class),
        @ApiResponse(code = 400, message = "Bad request", response = String.class),
        @ApiResponse(code = 404, message = "Not found", response = String.class),
        @ApiResponse(code = 500, message = "Internal server error", response = String.class) })
    @GetMapping(
        value = "/client/infoById",
        produces = { "application/json", "text/plain" }
    )
    ResponseEntity<ClientInfoDto> infoById();

}
